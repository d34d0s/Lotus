name: Lotus Nightshade Build

on:
  workflow_dispatch:  # allow manual runs from actions UI
  schedule:
    - cron: "0 0 * * MON-FRI"  # runs every night monday-friday at midnight EST
  push:   # run on push to the nightshade branch
    branches:
      - nightshade

jobs:
  build:
    runs-on: windows-latest
    
    if: github.ref == 'refs/heads/nightshade'

    steps:
      - name: Set Timezone to EST/EDT
        run: |
          echo "TZ=America/New_York" >> $GITHUB_ENV

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install MinGW
        run: choco install mingw -y

      - name: Install Cbuild
        run: pip install cbuild

      - name: Cbuild Lotus
        run: cbuild scripts/lotus.cbuild

      - name: Upload Nightshade Build
        uses: actions/upload-artifact@v4
        with:
          name: lotus-nightshade
          path: build/
          retention-days: 7  # keep builds for a week

      - name: Notify Discord
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          # Check if the workflow is triggered by a push or cron
          if ($env:GITHUB_EVENT_NAME -eq 'schedule') {
            $commitMessage = "Scheduled build - no new commit."
          } elseif ($env:GITHUB_EVENT_NAME -eq 'workflow_dispatch') {
            $commitMessage = "Manual build - no new commit."
          } else {
            $commitMessage = "${{ github.event.head_commit.message }}"
          }

          # define the discord payload
          $payload = @{
            username = "Lotus Nightshade Bot"
            content = "### Lotus `Nightshade` Build Complete! ðŸŒ‘`nMessage: $commitMessage`n[Download Build](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})"
          } | ConvertTo-Json -Depth 10

          # send the payload
          Invoke-RestMethod -Uri $env:DISCORD_WEBHOOK -Method Post -Body $payload -ContentType "application/json"
        shell: pwsh
